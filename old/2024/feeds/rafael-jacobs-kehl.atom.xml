<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyCaxias 2024 - Rafael Jacobs Kehl</title><link href="/" rel="alternate"></link><link href="/feeds/rafael-jacobs-kehl.atom.xml" rel="self"></link><id>/</id><updated>2024-07-06T08:40:00-03:00</updated><entry><title>Airflow: do básico à implementação do Factory Design Pattern</title><link href="/palestra1.html" rel="alternate"></link><published>2024-07-06T08:40:00-03:00</published><updated>2024-07-06T08:40:00-03:00</updated><author><name>Rafael Jacobs Kehl</name></author><id>tag:None,2024-07-06:/palestra1.html</id><summary type="html">&lt;p&gt;Uma breve introdução ao Airflow, começando dos conceitos básicos e casos de uso até a criação de um DAG.&lt;br&gt;
Analisaremos a estrutura dos DAGs e como temos muito código repetido, que muitas vezes é copiado e colado, o que pode causar alguns erros comuns.&lt;br&gt;
Todo esse código comum entre os …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Uma breve introdução ao Airflow, começando dos conceitos básicos e casos de uso até a criação de um DAG.&lt;br&gt;
Analisaremos a estrutura dos DAGs e como temos muito código repetido, que muitas vezes é copiado e colado, o que pode causar alguns erros comuns.&lt;br&gt;
Todo esse código comum entre os DAGs pode ser simplificado através do Factory Design Pattern, que provê uma interface para criar objetos em uma superclasse, com a possibilidade de ser estendido e modificado por subclasses.&lt;br&gt;
Mostrarei uma implementação desse Design Pattern para a criação de DAGs no Airflow e citarei os prós e contras dessa abordagem.&lt;/p&gt;</content><category term="horarios"></category><category term="horarios"></category></entry></feed>